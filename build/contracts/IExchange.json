{
  "contractName": "IExchange",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrKillOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetOrderEpoch",
          "type": "uint256"
        }
      ],
      "name": "cancelOrdersUpTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "signerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrKillOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrderNoThrow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "assetProxyId",
          "type": "bytes4"
        }
      ],
      "name": "getAssetProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderTakerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "getOrdersInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "orderTakerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibOrder.OrderInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "signerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketBuyOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketBuyOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketSellOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketSellOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.FillResults",
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "leftOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order",
          "name": "rightOrder",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "leftSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "rightSignature",
          "type": "bytes"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults",
              "name": "left",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LibFillResults.FillResults",
              "name": "right",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "leftMakerAssetSpreadAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFillResults.MatchedFillResults",
          "name": "matchedFillResults",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "signerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "preSign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetProxy",
          "type": "address"
        }
      ],
      "name": "registerAssetProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approval",
          "type": "bool"
        }
      ],
      "name": "setSignatureValidatorApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"batchCancelOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"takerAssetFillAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"batchFillOrKillOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"totalFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"takerAssetFillAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"batchFillOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"totalFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"takerAssetFillAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"batchFillOrdersNoThrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"totalFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetOrderEpoch\",\"type\":\"uint256\"}],\"name\":\"cancelOrdersUpTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signerAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fillOrKillOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"fillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fillOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"fillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fillOrderNoThrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"fillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"assetProxyId\",\"type\":\"bytes4\"}],\"name\":\"getAssetProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderTakerAssetFilledAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderInfo\",\"name\":\"orderInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"getOrdersInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"orderTakerAssetFilledAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"signerAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"marketBuyOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"totalFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"marketBuyOrdersNoThrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"totalFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"marketSellOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"totalFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"marketSellOrdersNoThrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"totalFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"leftOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"rightOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"leftSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"rightSignature\",\"type\":\"bytes\"}],\"name\":\"matchOrders\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"left\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"makerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetFilledAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFeePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFeePaid\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.FillResults\",\"name\":\"right\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"leftMakerAssetSpreadAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFillResults.MatchedFillResults\",\"name\":\"matchedFillResults\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"signerAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"preSign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetProxy\",\"type\":\"address\"}],\"name\":\"registerAssetProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"}],\"name\":\"setSignatureValidatorApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchCancelOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"details\":\"Synchronously cancels multiple orders in a single transaction.\",\"params\":{\"orders\":\"Array of order specifications.\"}},\"batchFillOrKillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])\":{\"details\":\"Synchronously executes multiple calls of fillOrKill.\",\"params\":{\"orders\":\"Array of order specifications.\",\"signatures\":\"Proofs that orders have been created by makers.\",\"takerAssetFillAmounts\":\"Array of desired amounts of takerAsset to sell in orders.\"}},\"batchFillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])\":{\"details\":\"Synchronously executes multiple calls of fillOrder.\",\"params\":{\"orders\":\"Array of order specifications.\",\"signatures\":\"Proofs that orders have been created by makers.\",\"takerAssetFillAmounts\":\"Array of desired amounts of takerAsset to sell in orders.\"}},\"batchFillOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])\":{\"details\":\"Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.\",\"params\":{\"orders\":\"Array of order specifications.\",\"signatures\":\"Proofs that orders have been created by makers.\",\"takerAssetFillAmounts\":\"Array of desired amounts of takerAsset to sell in orders.\"}},\"cancelOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"After calling, the order can not be filled anymore.\",\"params\":{\"order\":\"Order struct containing order specifications.\"}},\"cancelOrdersUpTo(uint256)\":{\"details\":\"Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch      and senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).\",\"params\":{\"targetOrderEpoch\":\"Orders created with a salt less or equal to this value will be cancelled.\"}},\"executeTransaction(uint256,address,bytes,bytes)\":{\"details\":\"Executes an exchange method call in the context of signer.\",\"params\":{\"data\":\"AbiV2 encoded calldata.\",\"salt\":\"Arbitrary number to ensure uniqueness of transaction hash.\",\"signature\":\"Proof of signer transaction by signer.\",\"signerAddress\":\"Address of transaction signer.\"}},\"fillOrKillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)\":{\"details\":\"Fills the input order. Reverts if exact takerAssetFillAmount not filled.\",\"params\":{\"order\":\"LibOrder.Order struct containing order specifications.\",\"signature\":\"Proof that order has been created by maker.\",\"takerAssetFillAmount\":\"Desired amount of takerAsset to sell.\"}},\"fillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)\":{\"details\":\"Fills the input order.\",\"params\":{\"order\":\"Order struct containing order specifications.\",\"signature\":\"Proof that order has been created by maker.\",\"takerAssetFillAmount\":\"Desired amount of takerAsset to sell.\"}},\"fillOrderNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)\":{\"details\":\"Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.\",\"params\":{\"order\":\"LibOrder.Order struct containing order specifications.\",\"signature\":\"Proof that order has been created by maker.\",\"takerAssetFillAmount\":\"Desired amount of takerAsset to sell.\"}},\"getAssetProxy(bytes4)\":{\"details\":\"Gets an asset proxy.\",\"params\":{\"assetProxyId\":\"Id of the asset proxy.\"},\"returns\":{\"_0\":\"The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered.\"}},\"getOrderInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"Gets information about an order: status, hash, and amount filled.\",\"params\":{\"order\":\"Order to gather information on.                   See LibOrder.OrderInfo for a complete description.\"}},\"getOrdersInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"details\":\"Fetches information for all passed in orders\",\"params\":{\"orders\":\"Array of order specifications.\"}},\"isValidSignature(bytes32,address,bytes)\":{\"details\":\"Verifies that a signature is valid.\",\"params\":{\"hash\":\"Message hash that is signed.\",\"signature\":\"Proof of signing.\",\"signerAddress\":\"Address of signer.\"}},\"marketBuyOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])\":{\"details\":\"Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\",\"params\":{\"makerAssetFillAmount\":\"Desired amount of makerAsset to buy.\",\"orders\":\"Array of order specifications.\",\"signatures\":\"Proofs that orders have been signed by makers.\"}},\"marketBuyOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])\":{\"details\":\"Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.      Returns false if the transaction would otherwise revert.\",\"params\":{\"makerAssetFillAmount\":\"Desired amount of makerAsset to buy.\",\"orders\":\"Array of order specifications.\",\"signatures\":\"Proofs that orders have been signed by makers.\"}},\"marketSellOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])\":{\"details\":\"Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\",\"params\":{\"orders\":\"Array of order specifications.\",\"signatures\":\"Proofs that orders have been created by makers.\",\"takerAssetFillAmount\":\"Desired amount of takerAsset to sell.\"}},\"marketSellOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])\":{\"details\":\"Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.      Returns false if the transaction would otherwise revert.\",\"params\":{\"orders\":\"Array of order specifications.\",\"signatures\":\"Proofs that orders have been signed by makers.\",\"takerAssetFillAmount\":\"Desired amount of takerAsset to sell.\"}},\"matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes,bytes)\":{\"details\":\"Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).\",\"params\":{\"leftOrder\":\"First order to match.\",\"leftSignature\":\"Proof that order was created by the left maker.\",\"rightOrder\":\"Second order to match.\",\"rightSignature\":\"Proof that order was created by the right maker.\"},\"returns\":{\"matchedFillResults\":\"Amounts filled and fees paid by maker and taker of matched orders.\"}},\"preSign(bytes32,address,bytes)\":{\"details\":\"Approves a hash on-chain using any valid signature type.      After presigning a hash, the preSign signature type will become valid for that hash and signer.\",\"params\":{\"signature\":\"Proof that the hash has been signed by signer.\",\"signerAddress\":\"Address that should have signed the given hash.\"}},\"registerAssetProxy(address)\":{\"details\":\"Registers an asset proxy to its asset proxy id.      Once an asset proxy is registered, it cannot be unregistered.\",\"params\":{\"assetProxy\":\"Address of new asset proxy to register.\"}},\"setSignatureValidatorApproval(address,bool)\":{\"details\":\"Approves/unnapproves a Validator contract to verify signatures on signer's behalf.\",\"params\":{\"approval\":\"Approval or disapproval of  Validator contract.\",\"validatorAddress\":\"Address of Validator contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchange.sol\":\"IExchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IAssetProxyDispatcher.sol\":{\"keccak256\":\"0xc3b372c155139c0d45d68d47fddb72a41d1df94af08a5adb307563f343a30a52\",\"urls\":[\"bzz-raw://9d1034d5551595ce84569c7530f619a76ad948ce2e264d74433da0dcaf881ec7\",\"dweb:/ipfs/QmR6izJUD3KH4VRijSSW6V9cPqWk43wtKsx3o4oVGqXLgT\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchange.sol\":{\"keccak256\":\"0x901f5f10f562ec942d9b49b8c808553ea586ffab4b04348dfed4dc0cb210a4a3\",\"urls\":[\"bzz-raw://14c3bc850741df2cacaf2a40dd0169e3c384512c2222401c89bf31813f76366b\",\"dweb:/ipfs/QmctETdBTgztiTZrHWy9swmMZeBuNX9YaHJFbWDbNo3mft\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchangeCore.sol\":{\"keccak256\":\"0x52ded571025eb13d529a223411d0588257d1fa78af34cda10eaf975ef447f0bf\",\"urls\":[\"bzz-raw://8e891816b6dd037354754276cb0c0656d54605d8dd366ce0dd3fc66fcb5005b4\",\"dweb:/ipfs/QmaUByaZMMVZrdVRb6YGsroGCFUmswcbbZnqXVHwo5W5CY\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IMatchOrders.sol\":{\"keccak256\":\"0xf61210bcb438f8306a09311bd3447782dbba921d0160d3c56f321115e037155f\",\"urls\":[\"bzz-raw://8bb97e09c1688a93a455123ee0e124fbb1b9a395ecdd0df505455ae10f179c48\",\"dweb:/ipfs/QmQZDjb7V9HYqHtRiM5u1BPMNvvDfFSyReYDpEhdX2eTSx\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0xfadf164d4b56e71a3b9b258ec89077548a85424873e0dea64c213f0e8a9a0729\",\"urls\":[\"bzz-raw://ea8d6d4ca2e07fb7a121947025435f0786ad6a2ae9c4fa36847fc332716563cb\",\"dweb:/ipfs/QmYs2kR1QLrpKNWUBRqBWUw7TnbjuC94khUAhSA2qkGFcT\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/ITransactions.sol\":{\"keccak256\":\"0x223d40c3365fa17f82d45116cda101ae8ac5bc9632af627d4f23d5f2f4f14993\",\"urls\":[\"bzz-raw://7b1a558da94e85981c751a04c1b3e50e44867960d43da92ce111bb979ee85be2\",\"dweb:/ipfs/QmUDx7vkLYdHShhoUvTR8LjKvcPvcGYTPxPRyv2RyKkfgz\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IWrapperFunctions.sol\":{\"keccak256\":\"0x9ae0622a77987eed762818baa90c9b38ae95e269e4c6b07a659e8120cfee1340\",\"urls\":[\"bzz-raw://a817d65d7d11574b33138baef014568d2f940e8abae902ed2cf4f0c9734d869a\",\"dweb:/ipfs/QmVBBbCyokaknLkEeRsSoCC6UgKGXVLUVHpjzNoGrhkWZs\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/libs/LibFillResults.sol\":{\"keccak256\":\"0x4e3fe0a3536681ccb2e0f8e2cbaabc61c02a7610fd9f2eb1c66f8718d176fb03\",\"urls\":[\"bzz-raw://33944da34bba41e6e7ca28f2c16679c887af1debde2d6c4bada3636e4c7a89f7\",\"dweb:/ipfs/QmNx2W2oqgWemckqiwT9T3vJzTbHmGVVCW5cPVQbCPeiZn\"]},\"/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/libs/LibOrder.sol\":{\"keccak256\":\"0x01f16c083d6b73f0cc61881b3ab6d5fd0295ab0bf4338d7c2239f6dbedfd94fd\",\"urls\":[\"bzz-raw://cdb08c3d327df3146e4355463507cff55a4a5ad3dcb44da64a4b08e7d40ae92e\",\"dweb:/ipfs/Qmd2rQ8xa4q6Xc3dpMLy2CU3yThQ9tQnXoYopn6fAupddW\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./IExchangeCore.sol\";\r\nimport \"./IMatchOrders.sol\";\r\nimport \"./ISignatureValidator.sol\";\r\nimport \"./ITransactions.sol\";\r\nimport \"./IAssetProxyDispatcher.sol\";\r\nimport \"./IWrapperFunctions.sol\";\r\n\r\n\r\n// solhint-disable no-empty-blocks\r\nabstract contract IExchange is\r\n    IExchangeCore,\r\n    IMatchOrders,\r\n    ISignatureValidator,\r\n    ITransactions,\r\n    IAssetProxyDispatcher,\r\n    IWrapperFunctions\r\n{}\r\n",
  "sourcePath": "E:/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchange.sol",
  "ast": {
    "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchange.sol",
    "exportedSymbols": {
      "IExchange": [
        223
      ]
    },
    "id": 224,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 203,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "id": 204,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:2"
      },
      {
        "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchangeCore.sol",
        "file": "./IExchangeCore.sol",
        "id": 205,
        "nodeType": "ImportDirective",
        "scope": 224,
        "sourceUnit": 262,
        "src": "62:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IMatchOrders.sol",
        "file": "./IMatchOrders.sol",
        "id": 206,
        "nodeType": "ImportDirective",
        "scope": 224,
        "sourceUnit": 282,
        "src": "93:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/ISignatureValidator.sol",
        "file": "./ISignatureValidator.sol",
        "id": 207,
        "nodeType": "ImportDirective",
        "scope": 224,
        "sourceUnit": 320,
        "src": "123:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/ITransactions.sol",
        "file": "./ITransactions.sol",
        "id": 208,
        "nodeType": "ImportDirective",
        "scope": 224,
        "sourceUnit": 336,
        "src": "160:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IAssetProxyDispatcher.sol",
        "file": "./IAssetProxyDispatcher.sol",
        "id": 209,
        "nodeType": "ImportDirective",
        "scope": 224,
        "sourceUnit": 202,
        "src": "191:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IWrapperFunctions.sol",
        "file": "./IWrapperFunctions.sol",
        "id": 210,
        "nodeType": "ImportDirective",
        "scope": 224,
        "sourceUnit": 484,
        "src": "230:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 211,
              "name": "IExchangeCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 261,
              "src": "341:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchangeCore_$261",
                "typeString": "contract IExchangeCore"
              }
            },
            "id": 212,
            "nodeType": "InheritanceSpecifier",
            "src": "341:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 213,
              "name": "IMatchOrders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 281,
              "src": "361:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMatchOrders_$281",
                "typeString": "contract IMatchOrders"
              }
            },
            "id": 214,
            "nodeType": "InheritanceSpecifier",
            "src": "361:12:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 215,
              "name": "ISignatureValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 319,
              "src": "380:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISignatureValidator_$319",
                "typeString": "contract ISignatureValidator"
              }
            },
            "id": 216,
            "nodeType": "InheritanceSpecifier",
            "src": "380:19:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 217,
              "name": "ITransactions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 335,
              "src": "406:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransactions_$335",
                "typeString": "contract ITransactions"
              }
            },
            "id": 218,
            "nodeType": "InheritanceSpecifier",
            "src": "406:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 219,
              "name": "IAssetProxyDispatcher",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 201,
              "src": "426:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAssetProxyDispatcher_$201",
                "typeString": "contract IAssetProxyDispatcher"
              }
            },
            "id": 220,
            "nodeType": "InheritanceSpecifier",
            "src": "426:21:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 221,
              "name": "IWrapperFunctions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 483,
              "src": "454:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWrapperFunctions_$483",
                "typeString": "contract IWrapperFunctions"
              }
            },
            "id": 222,
            "nodeType": "InheritanceSpecifier",
            "src": "454:17:2"
          }
        ],
        "contractDependencies": [
          201,
          261,
          281,
          319,
          335,
          483
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 223,
        "linearizedBaseContracts": [
          223,
          483,
          201,
          335,
          319,
          281,
          261
        ],
        "name": "IExchange",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 224,
        "src": "305:170:2"
      }
    ],
    "src": "0:477:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchange.sol",
      "exportedSymbols": {
        "IExchange": [
          223
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 203,
        "name": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 204,
        "name": "PragmaDirective",
        "src": "25:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 262,
          "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IExchangeCore.sol",
          "file": "./IExchangeCore.sol",
          "scope": 224,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 205,
        "name": "ImportDirective",
        "src": "62:29:2"
      },
      {
        "attributes": {
          "SourceUnit": 282,
          "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IMatchOrders.sol",
          "file": "./IMatchOrders.sol",
          "scope": 224,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 206,
        "name": "ImportDirective",
        "src": "93:28:2"
      },
      {
        "attributes": {
          "SourceUnit": 320,
          "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/ISignatureValidator.sol",
          "file": "./ISignatureValidator.sol",
          "scope": 224,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 207,
        "name": "ImportDirective",
        "src": "123:35:2"
      },
      {
        "attributes": {
          "SourceUnit": 336,
          "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/ITransactions.sol",
          "file": "./ITransactions.sol",
          "scope": 224,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 208,
        "name": "ImportDirective",
        "src": "160:29:2"
      },
      {
        "attributes": {
          "SourceUnit": 202,
          "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IAssetProxyDispatcher.sol",
          "file": "./IAssetProxyDispatcher.sol",
          "scope": 224,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 209,
        "name": "ImportDirective",
        "src": "191:37:2"
      },
      {
        "attributes": {
          "SourceUnit": 484,
          "absolutePath": "/E/Warcraft/t/CalDex/exchangewrapper/contracts/external/0x/v2/interfaces/IWrapperFunctions.sol",
          "file": "./IWrapperFunctions.sol",
          "scope": 224,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 210,
        "name": "ImportDirective",
        "src": "230:33:2"
      },
      {
        "attributes": {
          "abstract": true,
          "contractDependencies": [
            201,
            261,
            281,
            319,
            335,
            483
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            223,
            483,
            201,
            335,
            319,
            281,
            261
          ],
          "name": "IExchange",
          "nodes": [
            null
          ],
          "scope": 224
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IExchangeCore",
                  "referencedDeclaration": 261,
                  "type": "contract IExchangeCore"
                },
                "id": 211,
                "name": "UserDefinedTypeName",
                "src": "341:13:2"
              }
            ],
            "id": 212,
            "name": "InheritanceSpecifier",
            "src": "341:13:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IMatchOrders",
                  "referencedDeclaration": 281,
                  "type": "contract IMatchOrders"
                },
                "id": 213,
                "name": "UserDefinedTypeName",
                "src": "361:12:2"
              }
            ],
            "id": 214,
            "name": "InheritanceSpecifier",
            "src": "361:12:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ISignatureValidator",
                  "referencedDeclaration": 319,
                  "type": "contract ISignatureValidator"
                },
                "id": 215,
                "name": "UserDefinedTypeName",
                "src": "380:19:2"
              }
            ],
            "id": 216,
            "name": "InheritanceSpecifier",
            "src": "380:19:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ITransactions",
                  "referencedDeclaration": 335,
                  "type": "contract ITransactions"
                },
                "id": 217,
                "name": "UserDefinedTypeName",
                "src": "406:13:2"
              }
            ],
            "id": 218,
            "name": "InheritanceSpecifier",
            "src": "406:13:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IAssetProxyDispatcher",
                  "referencedDeclaration": 201,
                  "type": "contract IAssetProxyDispatcher"
                },
                "id": 219,
                "name": "UserDefinedTypeName",
                "src": "426:21:2"
              }
            ],
            "id": 220,
            "name": "InheritanceSpecifier",
            "src": "426:21:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IWrapperFunctions",
                  "referencedDeclaration": 483,
                  "type": "contract IWrapperFunctions"
                },
                "id": 221,
                "name": "UserDefinedTypeName",
                "src": "454:17:2"
              }
            ],
            "id": 222,
            "name": "InheritanceSpecifier",
            "src": "454:17:2"
          }
        ],
        "id": 223,
        "name": "ContractDefinition",
        "src": "305:170:2"
      }
    ],
    "id": 224,
    "name": "SourceUnit",
    "src": "0:477:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-13T11:11:34.979Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "batchCancelOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
        "details": "Synchronously cancels multiple orders in a single transaction.",
        "params": {
          "orders": "Array of order specifications."
        }
      },
      "batchFillOrKillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrKill.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        }
      },
      "batchFillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        }
      },
      "batchFillOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        }
      },
      "cancelOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "details": "After calling, the order can not be filled anymore.",
        "params": {
          "order": "Order struct containing order specifications."
        }
      },
      "cancelOrdersUpTo(uint256)": {
        "details": "Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch      and senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).",
        "params": {
          "targetOrderEpoch": "Orders created with a salt less or equal to this value will be cancelled."
        }
      },
      "executeTransaction(uint256,address,bytes,bytes)": {
        "details": "Executes an exchange method call in the context of signer.",
        "params": {
          "data": "AbiV2 encoded calldata.",
          "salt": "Arbitrary number to ensure uniqueness of transaction hash.",
          "signature": "Proof of signer transaction by signer.",
          "signerAddress": "Address of transaction signer."
        }
      },
      "fillOrKillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills the input order. Reverts if exact takerAssetFillAmount not filled.",
        "params": {
          "order": "LibOrder.Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "fillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills the input order.",
        "params": {
          "order": "Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "fillOrderNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",
        "params": {
          "order": "LibOrder.Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "getAssetProxy(bytes4)": {
        "details": "Gets an asset proxy.",
        "params": {
          "assetProxyId": "Id of the asset proxy."
        },
        "returns": {
          "_0": "The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered."
        }
      },
      "getOrderInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "details": "Gets information about an order: status, hash, and amount filled.",
        "params": {
          "order": "Order to gather information on.                   See LibOrder.OrderInfo for a complete description."
        }
      },
      "getOrdersInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
        "details": "Fetches information for all passed in orders",
        "params": {
          "orders": "Array of order specifications."
        }
      },
      "isValidSignature(bytes32,address,bytes)": {
        "details": "Verifies that a signature is valid.",
        "params": {
          "hash": "Message hash that is signed.",
          "signature": "Proof of signing.",
          "signerAddress": "Address of signer."
        }
      },
      "marketBuyOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.",
        "params": {
          "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers."
        }
      },
      "marketBuyOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.      Returns false if the transaction would otherwise revert.",
        "params": {
          "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers."
        }
      },
      "marketSellOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "marketSellOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.      Returns false if the transaction would otherwise revert.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes,bytes)": {
        "details": "Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).",
        "params": {
          "leftOrder": "First order to match.",
          "leftSignature": "Proof that order was created by the left maker.",
          "rightOrder": "Second order to match.",
          "rightSignature": "Proof that order was created by the right maker."
        },
        "returns": {
          "matchedFillResults": "Amounts filled and fees paid by maker and taker of matched orders."
        }
      },
      "preSign(bytes32,address,bytes)": {
        "details": "Approves a hash on-chain using any valid signature type.      After presigning a hash, the preSign signature type will become valid for that hash and signer.",
        "params": {
          "signature": "Proof that the hash has been signed by signer.",
          "signerAddress": "Address that should have signed the given hash."
        }
      },
      "registerAssetProxy(address)": {
        "details": "Registers an asset proxy to its asset proxy id.      Once an asset proxy is registered, it cannot be unregistered.",
        "params": {
          "assetProxy": "Address of new asset proxy to register."
        }
      },
      "setSignatureValidatorApproval(address,bool)": {
        "details": "Approves/unnapproves a Validator contract to verify signatures on signer's behalf.",
        "params": {
          "approval": "Approval or disapproval of  Validator contract.",
          "validatorAddress": "Address of Validator contract."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}